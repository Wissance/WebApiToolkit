using System;
using System.Collections.Generic;
using System.Reflection;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Logging;
using Wissance.WebApiToolkit.Core.Data;
using Wissance.WebApiToolkit.Data.Entity;
using Wissance.WebApiToolkit.Ef.Factories;
using Wissance.WebApiToolkit.Ef.Generators;

namespace Wissance.WebApiToolkit.Ef.Extensions
{
    public static class ServiceCollectionExtensions
    {
        public static Assembly AddSimplifiedAutoController<TObj, TId, TFilter>(this IServiceCollection services,
            DbContext context, string resourceName, ControllerType controllerType, 
            Func<TObj, IDictionary<string, string>, bool> filterFunc,
            ILoggerFactory loggerFactory)
            where TObj: class, IModelIdentifiable<TId>
            where TId: IComparable
            where TFilter: class, IReadFilterable
        {
            string assemblyName = $"AutoGenerated{resourceName}Controller";
            services.AddScoped(sp =>
            {
                return SimplifiedEfBasedManagerFactory.Create<TObj, TId>(context, filterFunc, loggerFactory);
            });
            
            Tuple<Assembly, string> controllerAssembly = OnTheFlyServicesGenerator.GenerateController<TObj, TId, TFilter>(assemblyName, resourceName, false, controllerType);
            
            return controllerAssembly.Item1;
        }
    }
}